version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: searchengine-postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - searchengine-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G

  backend:
    build:
      context: ./searchengine
      dockerfile: Dockerfile
    container_name: searchengine-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - JAVA_OPTS=-Xmx512m
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - searchengine-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: searchengine-frontend
    depends_on:
      - backend
    ports:
      - "3000:80"
    restart: unless-stopped
    networks:
      - searchengine-network
    deploy:
      resources:
        limits:
          memory: 256M

networks:
  searchengine-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
